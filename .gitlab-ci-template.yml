image: registry.gitlab.ics.muni.cz:443/muni-kypo-images/ci-cd-virtual-images/packer:latest

stages:
  - validate
  - build
  - test
  - deploy

validate:
  stage: validate
  script:
    - packer --version
    - packer validate $NAME.json
  needs: []

.build:
  stage: build
  cache:
    paths:
      - packer_cache
  when: manual
  allow_failure: false
  timeout: 3h
  resource_group: virtual-machine
  needs: ["validate"]

build-qemu:
  extends: .build
  script:
    - packer build -only=qemu $NAME.json
  artifacts:
    paths:
      - target-qemu/*

build-vbox:
  extends: .build
  script:
    - packer build -only=vbox $NAME.json
  artifacts:
    paths:
      - target-vbox/*

test-qemu:
  stage: test
  script:
    - ssh-keygen -f ./id_rsa -N "" -C mykey
    - mkdir -p drive/openstack/latest
    - echo "{\"uuid\":\"d8e02d56-2648-49a3-bf97-6be8f1204f38\", \"public_keys\":{\"mykey\":\"`cat id_rsa.pub`\"}}" > drive/openstack/latest/meta_data.json
    - mkisofs -R -J -V config-2 -o config.img drive/
    - qemu-system-x86_64 -accel kvm -m size=4096 -net nic -net user,hostfwd=tcp::2222-:22 -cdrom config.img target-qemu/* &
    - echo "ssh ansible_user=$DISTRO ansible_port=2222 ansible_host=127.0.0.1 ansible_connection=ssh" > inventory
    - ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook --private-key id_rsa -i inventory --ssh-extra-args "-o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ControlMaster=auto -o ControlPersist=60s" --timeout=30 -v playbook.yml
  resource_group: virtual-machine
  needs: ["build-qemu"]

test-vbox:
  stage: test
  script:
    - vagrant box add --name mybox target-vbox/*
    - vagrant up
  resource_group: virtual-machine
  needs: ["build-vbox"]

deploy-qemu:
  stage: deploy
  script:
    - test ! -z "$VERSION"   # Check VERSION is nonempty
    - openstack image create --file target-qemu/* --property hw_scsi_model=virtio-scsi --property hw_disk_bus=scsi --property hw_rng_model=virtio --property hw_qemu_guest_agent=yes --property os_require_quiesce=yes --property os_type=$TYPE --property os_distro=$DISTRO $CI_PROJECT_NAME-$VERSION
  when: manual
  needs: ["build-qemu", "test-qemu"]
  variables:
    OS_AUTH_TYPE: "v3applicationcredential"
    OS_AUTH_URL: "https://identity.cloud.muni.cz/v3"
    OS_IDENTITY_API_VERSION: "3"
    OS_INTERFACE: "public"
    OS_REGION_NAME: "brno1"

deploy-vbox:
  stage: deploy
  script:
    - test ! -z "$VERSION"
    - curl --header "Content-Type:application/json" --header "Authorization:Bearer $VAGRANT_CLOUD_TOKEN" https://app.vagrantup.com/api/v1/box/$VAGRANT_CLOUD_USER/$CI_PROJECT_NAME/versions --data "{\"version\":{\"version\":\"$VERSION\",\"description\":\"$DESCRIPTION\"}}"
    - curl --header "Content-Type:application/json" --header "Authorization:Bearer $VAGRANT_CLOUD_TOKEN" https://app.vagrantup.com/api/v1/box/$VAGRANT_CLOUD_USER/$CI_PROJECT_NAME/version/$VERSION/providers  --data "{\"provider\":{\"checksum\":\"`sha1sum target-vbox/* | awk '{print $1}'`\",\"checksum_type\":\"sha1\",\"name\":\"virtualbox\"}}"
    - UPLOAD_PATH=$(curl --header "Authorization:Bearer $VAGRANT_CLOUD_TOKEN" https://app.vagrantup.com/api/v1/box/$VAGRANT_CLOUD_USER/$CI_PROJECT_NAME/version/$VERSION/provider/virtualbox/upload | jq -r .upload_path)
    - curl $UPLOAD_PATH --request PUT --upload-file target-vbox/*
    - curl --header "Authorization:Bearer $VAGRANT_CLOUD_TOKEN" https://app.vagrantup.com/api/v1/box/$VAGRANT_CLOUD_USER/$CI_PROJECT_NAME/version/$VERSION/release --request PUT
  when: manual
  needs: ["build-vbox", "test-vbox"]
  only:
    - master
  variables:
    VAGRANT_CLOUD_USER: "munikypo"
    DESCRIPTION: "placeholder"
